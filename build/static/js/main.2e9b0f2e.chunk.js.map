{"version":3,"sources":["config/index.js","config/getRpcUrl.js","redux/auth/actions.js","redux/actions.js","images/logo.svg","components/Header/index.js","icons/twitter.svg","icons/telegram.svg","icons/discord.svg","icons/github.svg","icons/bunny.svg","icons/icon.svg","components/Footer/index.js","layout/index.js","$888/web3.js","$888/utils.js","$888/contracts.js","subgraphs/api.js","$888/pancakev2pair.js","$888/vault.js","$888/token.js","components/Page/index.js","components/PageHeader/index.js","components/Form/index.js","components/Button/index.js","components/Input/index.js","components/Button/labelButton.js","components/BetCtrl/index.js","components/Label/index.js","components/ConfirmModal/index.js","icons/stadistics.svg","icons/ox.svg","views/vault/index.js","icons/lottery.svg","icons/winners.svg","views/lottery/index.js","App.js","redux/auth/reducer.js","redux/reducers.js","redux/auth/saga.js","redux/sagas.js","redux/store.js","reportWebVitals.js","fonts/VT323-Regular.ttf","index.js"],"names":["getRpcUrl","require","default","config","web3Provider","networkId","contractAddress","$888","56","97","vault","wbnb","btcb","bifi","busd","$888BNBPair","btcbBNBPair","bifiBNBPair","busdBNBPair","pancakev2router","module","exports","testNodes","mainNode","chainId","randomIndex","random","length","setAddress","address","type","SET_ADDRESS","payload","setNetworkId","SET_NETWORKID","SET_ERROR","Header","wallet","useWallet","dispatch","useDispatch","useSelector","state","authUser","onConnectClick","a","status","connect","account","toString","NotificationManager","warning","Navbar","vbar","collapseOnSelect","expand","Brand","href","src","logo","className","alt","Toggle","aria-controls","Collapse","id","Nav","to","activestyle","color","rel","Link","onClick","alert","target","Button","variant","style","width","borderRadius","e","window","open","ethereum","networkVersion","substring","Footer","twitter","telegram","github","bunny","Layout","children","providerUrl","Web3","providers","HttpProvider","timeout","web3","getBNBBalance","eth","getBalance","ethBalance","bnDivdedByDecimals","BigNumber","callMethod","method","args","call","result","sendTransaction","fromAddress","toAddress","encodedABI","successCallBack","errorCallBack","wei","getGasPrice","gasPrice","tx","from","utils","toHex","data","value","on","hash","console","log","receipt","err","mobileSendTransaction","connected","then","catch","error","bnToDec","bn","decimals","dividedBy","pow","toNumber","bnMultipledByDecimals","multipliedBy","secondToDate","seconds","days","parseInt","dp","hours","minutes","$888ContractAddress","I$888Contract","Contract","$888ContractAbi","vaultContractAddress","IVaultContract","vaultContractAbi","$888BNBPairContractAddress","I$888BNBPairContract","pancakeV2PairContractAbi","bifiBNBPairContractAddress","IbifiBNBPairContract","btcbBNBPairContractAddress","IbtcbBNBPairContract","wbnbContractAddress","IWbnbContract","wbnbContractAbi","btcbContractAddress","bifiContractAddress","btcbContractAbi","busdBNBPairContractAddress","bifiContractAbi","IbusdBNBPairContract","$888Contract","abi","contract","vaultContract","$888BNBPairContract","bifiBNBPairContract","btcbBNBPairContract","wbnbContract","busdBNBPairContract","get$888Price","busdReserve","bnbReserve1","dao888Reserve","bnbReserve2","methods","_reserve0","_reserve1","price","getBNBPrice","getMarketcap","$888Price","getCirculatingSupply","curculatingSupply","getLPBalance","getLPTotalSupply","getPairBalances","$888Balance","getAmountOut","pairContractObj","amountIn","isEthOut","token0","tokenBalance","toLowerCase","getLPTVL","ethPrice","getSwapReward","pending","available","get$888Reward","getTotalStakedAmount","getMinimumDepositAmount","getUserTotalStakedAmount","stakedAmount","getStakedUserInfo","lockedTo","currentTimestamp","Math","floor","Date","now","endOfLock","isLocked","dateObject","toLocaleString","getRestTimeFor$888Rewards","lastClimedBlockFor888Reward","blockCountFor2weeks","getBlockNumber","currentBlockNumber","restTime","times","minus","getRestTimeForSwapRewards","lastClimedBlockForSwapReward","blockCountFor3months","getIsEnalbledLock","getBurnFee","div","getEarlyUnstakeFee","getAllocPointForWBNB","getAllocPointForBTCB","getAllocPointForBIFI","getTVL","stakedLpAmount","LPTotalSupply","eq","LPTVL","getWinners","getCollectedLotteryAmount","getWinnersInfo","winners","winnersInfo","i","winner","timestamp","push","amount","getLotteryFee","fee","getLotteryLimit","limit","getLotteryTotalPaidOut","getAPY","poolTvl","$888PerBlock","blockCountForYear","getTotalSupply","pairTokenBalances","totalStakedAmount","$888AmountInVault","locked$888","Page","PageHeader","title","content","Form","text","onClickHandler","Input","name","onChangeHandler","useState","inputValue","setInputValue","emitChange","useCallback","useEffect","onChange","match","LabelButton","BetCtrl","label","balance","currentVal","Row","Col","xs","toFixed","sm","Label","xl","StyledModal","styled","Modal","ConfirmModal","setShowConfirmModal","setIsConfirmed","show","onHide","centered","Title","Body","primary","override","css","Vault","currentNetworkId","DECIMAL_PLACES","FORMAT","prefix","decimalSeparator","groupSeparator","groupSize","stakeAmount","unstakeAmount","claimAmount","values","setValues","progress","setProgress","totalSupply","setTotalSupply","circulatingSupply","setCirculatingSupply","tvl","setTVL","set$888Price","marketcap","setMarketcap","setTotalStakedAmount","userBalance","setUserBalance","userTotalStakedAmount","setUserTotalStakedAmount","minDepositAmount","setMinDepositAmount","userBNBBalance","setUserBNBBalance","userSwapReward","setUserSwapReward","user$888Reward","setUser$888Reward","isEnabledLock","setIsEnalbledLock","stakedUserInfo","setStakedUserInfo","userWbnbAvailableReward","setUserWbnbAvailableReward","userBtcbAvailableReward","setUserBtcbAvailableReward","userBifiAvailableReward","setUserBifiAvailableReward","userWbnbPendingReward","setUserWbnbPendingReward","userBtcbPendingReward","setUserBtcbPendingReward","userBifiPendingReward","setUserBifiPendingReward","pending$888Value","setPending$888Value","available$888Value","setAvailable$888Value","timerID","setTimerID","showConfirmModal","modalTitle","setModalTitle","modalContent","setModalContent","isConfirmed","isTreasury","setIsTreasury","isUnstake","setIsUnstake","burnFee","setBurnFee","earlyUnstakeFee","setEarlyUnstakeFee","apy","setApy","transactionType","fetchAllDataFromContract","clearInterval","tempTimerID","setInterval","bn$888Price","isGreaterThan","wbnbEstimateAmount","wbnbRewardAmount","btcbRewardAmount","bifiRewardAmount","event","transactionDone","transactionError","onStake","lt","stake","encodeABI","isMobile","onClaimAvailable$888Reward","lte","claim$888AvailableReward","onShowConfirmModalFor$888","onShowConfirmModalForQuarterly","onShowConfirmModalForUnstake","onUnstake","onClaim$888Reward","onClaimSwapReward","rewards","plus","claim888Reward","onClaimAvailableSwapReward","claimSwapAvailableReward","claimSwapReward","userTotalStakedAmountBn","gt","unstake","stats","size","loading","toFormat","md","lineHeight","replace","Lottery","setWinners","lotteryAmount","setLotteryAmount","setWinnersInfo","poolValue","setPoolValue","totalPaidOut","setTotalPaidOut","totalPaidOutValue","setTotalPaidOutValue","lotteryFee","setLotteryFee","lotteryLimit","setLotteryLimit","lottery","textTransform","win","overflowY","height","map","element","index","setAddressRequest","setNetworkIdRequest","setErrorRequest","setError","net","getId","netId","handleNetworkChanged","accounts","handleAddressChanged","selectedAddress","currentProvider","path","exact","INIT_STATE","authReducer","action","reducers","combineReducers","rootSaga","all","getState","authSagas","sagaMiddleware","createSagaMiddleware","middlewares","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","initialState","createStore","compose","applyMiddleware","run","sagas","configureStore","connectors","bsc","document","getElementById"],"mappings":"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","file":"static/js/main.2e9b0f2e.chunk.js","sourcesContent":["const { default: getRpcUrl } = require('./getRpcUrl');\nrequire('dotenv').config();\n\n// const web3Provider =\n//   process.env.REACT_APP_NETWORK_ID === '56'\n//     ? process.env.REACT_APP_MAIN_WEB3_PROVIDER\n//     : process.env.REACT_APP_TEST_WEB3_PROVIDER;\n\nconst web3Provider = getRpcUrl('56');\nconst config = {\n  web3Provider: web3Provider,\n  networkId: '56', //   process.env.REACT_APP_NETWORK_ID\n  contractAddress: {\n    $888: {\n      56: '0xBFb2857474A48b345dD1c2F67ba57C28caa630fA',\n      97: '0xB5526B53050282474B3dEB5Aca92519bB7A60A33',\n    },\n    vault: {\n      56: '0x56589dCFd44273FaCfFaf55C113B21FD2169C22e',\n      97: '0x6bC9271B45926317B4c07D0fFE1631dd811C16f3',\n    },\n    wbnb: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xB5526B53050282474B3dEB5Aca92519bB7A60A33',\n    },\n    btcb: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xB5526B53050282474B3dEB5Aca92519bB7A60A33',\n    },\n    bifi: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '0xB5526B53050282474B3dEB5Aca92519bB7A60A33',\n    },\n    busd: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '0xB5526B53050282474B3dEB5Aca92519bB7A60A33',\n    },\n    $888BNBPair: {\n      56: '0x16B2E4B83Cca634beB3902e592B0af71022d3C0f',\n      97: '0xB5526B53050282474B3dEB5Aca92519bB7A60A33',\n    },\n    btcbBNBPair: {\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n      97: '0xB5526B53050282474B3dEB5Aca92519bB7A60A33',\n    },\n    bifiBNBPair: {\n      56: '0xd132d2c24f29ee8abb64a66559d1b7aa627bd7fd',\n      97: '0xB5526B53050282474B3dEB5Aca92519bB7A60A33',\n    },\n    busdBNBPair: {\n      56: '0x1B96B92314C44b159149f7E0303511fB2Fc4774f',\n      97: '0xB5526B53050282474B3dEB5Aca92519bB7A60A33',\n    },\n    pancakev2router: {\n      56: '0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F',\n      97: '0xB5526B53050282474B3dEB5Aca92519bB7A60A33',\n    },\n  },\n};\n\nmodule.exports = config;\n","import random from 'lodash/random';\n\n// Array of available nodes to connect to\n// const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\nconst testNodes = [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/', \n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n];\n\nconst mainNode = [\n  'https://bsc-dataseed.binance.org/',\n  'https://bsc-dataseed1.defibit.io/',\n  'https://bsc-dataseed1.ninicoin.io/',\n  'https://bsc-dataseed2.defibit.io/',\n  'https://bsc-dataseed3.defibit.io/',\n];\n\nconst getRpcUrl = (chainId) => {\n  if(chainId === '65') {\n    const randomIndex = random(0, mainNode.length - 1);\n    return mainNode[randomIndex];\n  } else {\n    const randomIndex = random(0, testNodes.length - 1);\n    return testNodes[randomIndex];\n  }\n}\n\nexport default getRpcUrl;","import {\n  SET_ADDRESS,\n  SET_NETWORKID,\n  SET_ERROR,\n} from '../actions';\n\nexport const setAddress = (address) => ({\n  type: SET_ADDRESS,\n  payload: { address }\n});\n\nexport const setNetworkId = (networkId) => ({\n  type: SET_NETWORKID,\n  payload: { networkId }\n});\n\nexport const setError = (error) => ({\n  type: SET_ERROR,\n  payload: { error }\n});\n","/* AUTH */\nexport const SET_ADDRESS = \"SET_ADDRESS\";\nexport const SET_NETWORKID = \"SET_NETWORKID\";\nexport const SET_ERROR = \"SET_ERROR\";\n\nexport * from \"./auth/actions\";\n","export default __webpack_public_path__ + \"static/media/logo.69a58cbc.svg\";","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Nav, Navbar, Button } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport { NotificationManager } from 'react-notifications'\nimport { setAddress, setNetworkId } from '../../redux/actions'\n\nimport logo from '../../images/logo.svg'\nimport './header.css'\nimport { useWallet } from 'use-wallet'\n\nfunction Header() {\n  const wallet = useWallet()\n  // console.log('wallet >>>', wallet);\n\n  const dispatch = useDispatch()\n  const address = useSelector((state) => state.authUser.address)\n  // console.log(address)\n  // const networkId = useSelector(state => state.authUser.networkId);\n\n  const onConnectClick = async () => {\n    if (wallet.status === 'disconnected') {\n      wallet.connect();\n    } else if (wallet.status === 'connected') {\n      dispatch(setAddress(wallet.account))\n      dispatch(setNetworkId(wallet.chainId.toString(10)))\n    } else if (wallet.status === 'error') {\n      NotificationManager.warning('Please install MetaMask!')\n      return\n    }\n\n    // console.log(wallet.account);\n    // console.log(wallet.chainId);\n    // console.log(wallet.ethereum);\n    // console.log(wallet.status);\n  }\n\n  return (\n    <Navbar vbar=\"true\" collapseOnSelect expand='lg'>\n      <Navbar.Brand href='/'>\n        <img src={logo} className='logo' alt='$888 Logo' />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n      <Navbar.Collapse id='responsive-navbar-nav'>\n        <Nav className='mr-auto'>\n          <NavLink\n            className='menu-item'\n            to='/vault'\n            activestyle={{ color: '#EE2529' }}\n          >\n            VAULT\n          </NavLink>\n          <NavLink\n            className='menu-item'\n            to='/lottery'\n            activestyle={{ color: '#EE2529' }}\n            rel='noreferrer'\n          >\n            LOTTERY\n          </NavLink>\n          <Nav.Link\n            className='menu-item'\n            onClick={() => alert('Coming soon!')}\n            activestyle={{ color: '#EE2529' }}\n          >\n            VOTE\n          </Nav.Link>\n          <Nav.Link\n            className='menu-item'\n            href='https://888dao-finance.medium.com/888-dao-bsc-yield-farming-that-earns-you-red-envelope-rewards-wbnb-btcb-and-bifi-94d0d83a544f'\n            activestyle={{ color: '#EE2529' }}\n            target='_blank'\n            rel='noreferrer'\n          >\n            ABOUT\n          </Nav.Link>\n          <Nav.Link\n            className='menu-item'\n            href='/888Dao_Audit.pdf'\n            activestyle={{ color: '#EE2529' }}\n            target='_blank'\n            rel='noreferrer'\n          >\n            AUDIT\n          </Nav.Link>\n        </Nav>\n        <Nav>\n          <Nav.Link href='#'>\n            {address === null ? (\n              <Button\n                variant='danger'\n                onClick={() => onConnectClick()}\n                style={{ width: '182px', borderRadius: '58px' }}\n              >\n                Wallet Connect\n              </Button>\n            ) : (\n              <Button\n                variant='outline-info'\n                onClick={(e) => {\n                  window.open(\n                    window.ethereum.networkVersion === '56'\n                    ? `https://bscscan.com/address/${address}`\n                    : `https://testnet.bscscan.com/address/${address}`,\n                    '_blank'\n                  )\n                }}\n                width='100%'\n              >\n                {`${address.substring(0, 7)}...${address.substring(\n                  address.length - 5,\n                  address.length\n                )}`}\n              </Button>\n            )}\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/twitter.ac97ef4b.svg\";","export default __webpack_public_path__ + \"static/media/telegram.2272fecd.svg\";","export default __webpack_public_path__ + \"static/media/discord.81f3ae88.svg\";","export default __webpack_public_path__ + \"static/media/github.b8afbea5.svg\";","export default __webpack_public_path__ + \"static/media/bunny.687fc74a.svg\";","export default __webpack_public_path__ + \"static/media/icon.6d192c73.svg\";","import React from 'react'\nimport './footer.css'\n\nimport twitter from '../../icons/twitter.svg'\nimport discord from '../../icons/discord.svg'\nimport telegram from '../../icons/telegram.svg'\nimport github from '../../icons/github.svg'\nimport bunny from '../../icons/bunny.svg'\nimport dextools from '../../icons/icon.svg'\n\nfunction Footer() {\n  return (\n    <div className='footer'>\n      <ul>\n        <li>\n          <a href=\"https://twitter.com/888daofinance\" rel=\"noreferrer\" target=\"_blank\" >\n            <img src={twitter} alt='Twitter' />\n          </a>\n        </li>\n        <li>\n          <a href=\"https://t.me/dao888finance\" rel=\"noreferrer\" target=\"_blank\" >\n            <img src={telegram} alt='Telegram' />\n          </a>\n        </li>\n        <li>\n          <a href=\"https://github.com/888daofinance\" rel=\"noreferrer\" target=\"_blank\" >\n            <img src={github} alt='Github' />\n          </a>\n        </li>\n        <li>\n          <a href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0xBFb2857474A48b345dD1c2F67ba57C28caa630fA\" rel=\"noreferrer\" target=\"_blank\" >\n            <img src={bunny} alt='pancakeswap' />\n          </a>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport './layout.css';\n\nfunction Layout({children}) {\n    return (\n        <div className=\"layout\">\n            <Header/>\n                {children}\n            <Footer/>\n        </div>\n    );\n}\n\nexport default Layout;","import Web3 from 'web3';\nimport config from '../config';\n\nlet providerUrl = config.web3Provider;\n// console.log(providerUrl);\nproviderUrl = new Web3.providers.HttpProvider(config.web3Provider, { timeout: 10000 })\n// console.log(providerUrl);\nconst web3 = new Web3(window.ethereum || providerUrl);\n// console.log(web3);\nexport { Web3, providerUrl, web3 };\n","import { web3 } from './web3';\nimport BigNumber from 'bignumber.js';\n\nconst createEthAccount = () => {\n  return web3.eth.accounts.create();\n};\n\nconst getBNBBalance = async (address) => {\n  const ethBalance = await web3.eth.getBalance(address);\n  return bnDivdedByDecimals(new BigNumber(ethBalance));\n}\n\nconst checkBNBBalance = async (address, threshold = 0) => {\n  const balance = await getBNBBalance(address);\n  if (balance.lte(new BigNumber(threshold))) {\n    throw new Error('Insufficient balance');\n  }\n  return balance;\n}\n\nconst callMethod = async (method, args = []) => {\n  const result = await method(...args).call();\n  return result;\n}\n\nconst sendTransaction = async (fromAddress, toAddress, encodedABI, successCallBack, errorCallBack, wei = `0x0`) => {\n  const web3 = window.web3;\n  if (window.ethereum && web3) {\n    try {\n      const gasPrice = await web3.eth.getGasPrice();\n      const tx = {\n        from: fromAddress,\n        to: toAddress,\n        // gas: gasLimit,\n        gasPrice: web3.utils.toHex(gasPrice), //`0xAB5D04C00`,\n        data: encodedABI,\n        value: wei\n      };\n\n      web3.eth.sendTransaction(tx)\n        .on('transactionHash', (hash) => { console.log('hash: ', hash) })\n        .on('receipt', (receipt) => {\n          successCallBack();\n        })\n        .on('error', (err) => {\n          errorCallBack(err)\n        });\n\n    } catch (err) {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\nconst mobileSendTransaction = async (fromAddress, toAddress, encodedABI, successCallBack, errorCallBack, wei = `0x0`) => {\n  if (web3.connected) {\n    try {\n      // gasPrice = '0x${gasPrice.toString(16)';\n      const tx = {\n        from: fromAddress,\n        to: toAddress,\n        // gas: gasLimit,\n        // chainId: 3,\n        data: encodedABI,\n        value: wei\n      };\n      // console.log(\"params: ==>\", tx);\n\n      // const txHash = await window.ethereum.request({\n      //   method: 'eth_sendTransaction',\n      //   params: [tx],\n      // });\n      // return txHash;\n\n      web3.sendTransaction(tx)\n        .then((result) => {\n          // Returns transaction id (hash)\n          successCallBack();\n        })\n        .catch((error) => {\n          // Error returned when rejected\n          errorCallBack();\n        });\n\n    } catch (err) {\n      console.log('err :>> ', err);\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\nconst getNetworkNonce = async (address) => {\n  try {\n    let nonce = await web3.eth.getTransactionCount(address);\n    const pendingTxCount = await new Promise((resolve, reject) => {\n      web3.currentProvider.send({\n        method: 'txpool_content',\n        params: [],\n        jsonrpc: '2.0',\n        id: new Date().getTime()\n      }, (error, response) => {\n        if (response && response.error && response.error.code) {\n          console.error('signTxData err:', response);\n        }\n        if (error) {\n          reject(error);\n        } else\n          // Even though the API call didn't error the response can still contain an error message.\n          if (response && response.result.pending && response.result.pending[address]) {\n            const txnsCount = Object.keys(response.result.pending[address]).length;\n            resolve(txnsCount);\n          }\n        resolve(0);\n      });\n    });\n    // eslint-disable-next-line no-unused-vars\n    nonce = new BigNumber(nonce).plus(pendingTxCount).toNumber();\n    return nonce;\n  } catch (err) {\n    return 0;\n  }\n}\n\nconst bnToDec = (bn, decimals = 18) => {\n  return bn.dividedBy(new BigNumber(10).pow(decimals)).toNumber()\n}\n\nconst bnDivdedByDecimals = (bn, decimals = 18) => {\n  return bn.dividedBy(new BigNumber(10).pow(decimals))\n}\n\nconst bnMultipledByDecimals = (bn, decimals = 18) => {\n  return bn.multipliedBy(new BigNumber(10).pow(decimals))\n}\n\nconst decToBn = (dec, decimals = 18) => {\n  return new BigNumber(dec).multipliedBy(new BigNumber(10).pow(decimals))\n}\n\nconst secondToDate = (seconds) => {\n  const days = parseInt(new BigNumber(seconds / (3600 * 24)).dp(0, 6).toNumber());\n\n  if (days !== 0) {\n    return days === 1 ? \"1 day\" : days + \" days\";\n  } else {\n    const hours = parseInt(new BigNumber(seconds / 3600).dp(0, 0).toNumber());\n    \n    if (hours !== 0) {\n      return hours === 1 ? \"1 hour\" : hours + \" hours\";\n    } else {\n      const minutes = parseInt(new BigNumber(seconds / 60).dp(0, 0).toNumber());\n      if (minutes !== 0) {\n        return minutes === 1 ? \"1 minute\" : minutes + \" minutes\";\n      } else {\n        return seconds + \" seconds\";\n      }\n    }\n  }\n}\n\nexport {\n  createEthAccount,\n  getBNBBalance,\n  checkBNBBalance,\n  callMethod,\n  sendTransaction,\n  mobileSendTransaction,\n  getNetworkNonce,\n  bnToDec,\n  bnDivdedByDecimals,\n  bnMultipledByDecimals,\n  decToBn,\n  secondToDate\n};\n","/* eslint-disable quote-props */\n/* eslint-disable max-len */\nimport { web3 } from './web3';\nimport config from '../config';\n\nimport $888ContractAbi from './abis/$888Contract.json';\nimport vaultContractAbi from './abis/vaultContract.json';\nimport pancakeV2PairContractAbi from './abis/$888BNBPairContract.json';\nimport wbnbContractAbi from './abis/wbnbContract.json';\nimport btcbContractAbi from './abis/btcbContract.json';\nimport bifiContractAbi from './abis/bifiContract.json';\n\nconst networkId = config.networkId;\n// console.log('networkId >>> ', networkId);\n\nconst $888ContractAddress = config.contractAddress.$888[networkId];\nconst I$888Contract = new web3.eth.Contract($888ContractAbi, $888ContractAddress);\n// console.log('$888ContractAddress >>>', $888ContractAddress);\n// console.log('I$888Contract >>> ', I$888Contract);\n\nconst vaultContractAddress = config.contractAddress.vault[networkId];\nconst IVaultContract = new web3.eth.Contract(\n  vaultContractAbi,\n  vaultContractAddress\n);\n// console.log('vaultContractAddress >>>', vaultContractAddress);\n// console.log('IVaultContract >>>', IVaultContract);\n\nconst $888BNBPairContractAddress = config.contractAddress.$888BNBPair[networkId];\nconst I$888BNBPairContract = new web3.eth.Contract(\n  pancakeV2PairContractAbi,\n  $888BNBPairContractAddress\n);\n// console.log('888BNBPairContractAddress >>>', $888BNBPairContractAddress);\n// console.log('I$888BNBPairContract >>>', I$888BNBPairContract);\n\nconst bifiBNBPairContractAddress = config.contractAddress.bifiBNBPair[networkId];\nconst IbifiBNBPairContract = new web3.eth.Contract(\n  pancakeV2PairContractAbi,\n  bifiBNBPairContractAddress\n);\n// console.log('bifiBNBPairContractAddress >>>', bifiBNBPairContractAddress);\n// console.log('IbifiBNBPairContract >>>', IbifiBNBPairContract);\n\nconst btcbBNBPairContractAddress =\n  config.contractAddress.btcbBNBPair[networkId];\nconst IbtcbBNBPairContract = new web3.eth.Contract(\n  pancakeV2PairContractAbi,\n  btcbBNBPairContractAddress\n);\n// console.log('btcbBNBPairContractAddress >>>', btcbBNBPairContractAddress);\n// console.log('IbtcbBNBPairContract >>>', IbtcbBNBPairContract);\n\nconst wbnbContractAddress = config.contractAddress.wbnb[networkId];\nconst IWbnbContract = new web3.eth.Contract(\n  wbnbContractAbi,\n  wbnbContractAddress\n);\n// console.log('wbnbContractAddress >>>', wbnbContractAddress);\n// console.log('IWbnbContract >>>', IWbnbContract);\n\nconst btcbContractAddress = config.contractAddress.btcb[networkId];\nconst IbtcbContract = new web3.eth.Contract(\n  btcbContractAbi,\n  btcbContractAddress\n);\n// console.log('btcbContractAddress >>>', btcbContractAddress);\n// console.log('IbtcbContract >>>', IbtcbContract);\n\nconst bifiContractAddress = config.contractAddress.bifi[networkId];\nconst IbifiContract = new web3.eth.Contract(bifiContractAbi, bifiContractAddress);\n// console.log('bifiContractAddress >>>', bifiContractAddress);\n// console.log('IbifiContract >>>', IbifiContract);\n\nconst busdBNBPairContractAddress =\n  config.contractAddress.busdBNBPair[networkId];\nconst IbusdBNBPairContract = new web3.eth.Contract(\n  pancakeV2PairContractAbi,\n  busdBNBPairContractAddress\n);\n// console.log('busdBNBPairContractAddress >>>', busdBNBPairContractAddress);\n// console.log('IbusdBNBPairContract >>>', IbusdBNBPairContract);\n\nconst $888Contract = {\n  address: $888ContractAddress,\n  abi: $888ContractAbi,\n  contract: I$888Contract,\n  decimals: 18,\n};\n\nconst vaultContract = {\n  address: vaultContractAddress,\n  abi: vaultContractAbi,\n  contract: IVaultContract,\n};\n\nconst $888BNBPairContract = {\n  address: $888BNBPairContractAddress,\n  abi: pancakeV2PairContractAbi,\n  contract: I$888BNBPairContract,\n  decimals: 18,\n};\n\nconst bifiBNBPairContract = {\n  address: bifiBNBPairContractAddress,\n  abi: pancakeV2PairContractAbi,\n  contract: IbifiBNBPairContract,\n  decimals: 18,\n};\n\nconst btcbBNBPairContract = {\n  address: btcbBNBPairContractAddress,\n  abi: pancakeV2PairContractAbi,\n  contract: IbtcbBNBPairContract,\n  decimals: 18,\n};\n\nconst wbnbContract = {\n  address: wbnbContractAddress,\n  abi: wbnbContractAbi,\n  contract: IWbnbContract,\n  decimals: 18,\n};\n\nconst btcbContract = {\n  address: btcbContractAddress,\n  abi: bifiContractAbi,\n  contract: IbtcbContract,\n  decimals: 8,\n};\n\nconst bifiContract = {\n  address: bifiContractAddress,\n  abi: btcbContractAbi,\n  contract: IbifiContract,\n  decimals: 18,\n};\n\nconst busdBNBPairContract = {\n  address: busdBNBPairContractAddress,\n  abi: pancakeV2PairContractAbi,\n  contract: IbusdBNBPairContract,\n  decimals: 18,\n};\n\nexport {\n  networkId,\n  $888Contract,\n  vaultContract,\n  $888BNBPairContract,\n  bifiBNBPairContract,\n  btcbBNBPairContract,\n  wbnbContract,\n  btcbContract,\n  bifiContract,\n  busdBNBPairContract,\n};\n","import BigNumber from 'bignumber.js';\n// import { gql } from '@apollo/client';\n// import client from './apollo';\nimport { $888BNBPairContract, busdBNBPairContract, wbnbContract } from '../$888/contracts';\nimport { getCirculatingSupply } from '../$888/token';\nimport { bnToDec, callMethod } from '../$888/utils';\n\n// const GET_PAIR_PRICE = gql`\n//   query GetExchangeRates {\n//     pair(id: \"${$888BNBPairContract.address}\"){\n//         token0Price\n//         token1Price\n//     }\n//    }\n// `;\n\nconst get$888Price = async () => {\n    let busdReserve = 0;\n    let bnbReserve1 = 0;\n    let dao888Reserve = 0;\n    let bnbReserve2 = 0;\n    let token0;\n\n    token0 = await callMethod(busdBNBPairContract.contract.methods['token0'], []);\n    if(token0 === wbnbContract.address) {\n        let result = await callMethod(busdBNBPairContract.contract.methods['getReserves'], []);\n        bnbReserve1 = bnToDec(new BigNumber(result._reserve0));\n        busdReserve = bnToDec(new BigNumber(result._reserve1));\n    } else {\n        let result = await callMethod(busdBNBPairContract.contract.methods['getReserves'], []);\n        busdReserve = bnToDec(new BigNumber(result._reserve0));\n        bnbReserve1 = bnToDec(new BigNumber(result._reserve1));\n    }\n\n    token0 = await callMethod($888BNBPairContract.contract.methods['token0'], []);\n    if(token0 === wbnbContract.address) {\n        let result = await callMethod($888BNBPairContract.contract.methods['getReserves'], []);\n        bnbReserve2 = bnToDec(new BigNumber(result._reserve0));\n        dao888Reserve = bnToDec(new BigNumber(result._reserve1));\n    } else {\n        let result = await callMethod($888BNBPairContract.contract.methods['getReserves'], []);\n        dao888Reserve = bnToDec(new BigNumber(result._reserve0));\n        bnbReserve2 = bnToDec(new BigNumber(result._reserve1));\n    }\n\n    if(bnbReserve1 <= 0 || dao888Reserve <= 0) return;\n\n    console.log('busdReserve :>> ', busdReserve);\n    console.log('bnbReserve1 :>> ', bnbReserve1);\n    console.log('bnbReserve2 :>> ', bnbReserve2);\n    console.log('dao888Reserve :>> ', dao888Reserve);\n    \n    const price = busdReserve * bnbReserve2 / bnbReserve1 / dao888Reserve;\n    return price;\n};\n\nconst getBNBPrice = async () => {\n    let busdReserve = 0;\n    let bnbReserve1 = 0;\n    let token0;\n\n    token0 = await callMethod(busdBNBPairContract.contract.methods['token0'], []);\n    if(token0 === wbnbContract.address) {\n        let result = await callMethod(busdBNBPairContract.contract.methods['getReserves'], []);\n        bnbReserve1 = bnToDec(new BigNumber(result._reserve0));\n        busdReserve = bnToDec(new BigNumber(result._reserve1));\n    } else {\n        let result = await callMethod(busdBNBPairContract.contract.methods['getReserves'], []);\n        busdReserve = bnToDec(new BigNumber(result._reserve0));\n        bnbReserve1 = bnToDec(new BigNumber(result._reserve1));\n    }\n\n    if(bnbReserve1 <= 0 || busdReserve <= 0) return;\n\n    const price = busdReserve / bnbReserve1;\n    return price;\n};\n\nconst getMarketcap = async () => {\n    const $888Price = await get$888Price();\n    const curculatingSupply = bnToDec(await getCirculatingSupply());\n    return ($888Price * curculatingSupply);\n};\n\nexport {\n    get$888Price,\n    getBNBPrice,\n    getMarketcap\n}","import BigNumber from 'bignumber.js';\nimport { $888BNBPairContract, wbnbContract } from './contracts';\nimport { callMethod, bnToDec } from './utils';\nimport { get$888Price, getBNBPrice } from '../subgraphs/api';\n\n// Getters\nexport const getLPBalance = async (address) => {\n  try {\n    const result = await callMethod($888BNBPairContract.contract.methods['balanceOf'], [address]);\n    return new BigNumber(result);\n  } catch {\n    return new BigNumber(0);\n  }\n}\n\nexport const getLPTotalSupply = async () => {\n  try {\n    const result = await callMethod($888BNBPairContract.contract.methods['totalSupply'], []);\n    return new BigNumber(result);\n  } catch (e) {\n    // console.log('error :>> ', e.message);\n    return new BigNumber(0);\n  }\n}\n\nexport const getPairBalances = async () => {\n  try {\n    const result = await callMethod($888BNBPairContract.contract.methods['getReserves'], []);\n    const $888Balance = new BigNumber(result._reserve0);\n    const ethBalance = new BigNumber(result._reserve1);\n    return {'$888': $888Balance, 'eth': ethBalance};\n\n  } catch (e) {\n    // console.log('error :>> ', e.message);\n    return {'$888': new BigNumber(0), 'eth': new BigNumber(0)};\n  }\n}\n\nexport const getAmountOut = async (pairContractObj, amountIn, isEthOut, decimals = 18) => {\n  const result = await callMethod(pairContractObj.contract.methods['getReserves'], []);\n  const token0 = await callMethod(pairContractObj.contract.methods['token0'], []);\n  \n  let tokenBalance = 0;\n  let ethBalance = 0;\n\n  if (token0.toLowerCase() === wbnbContract.address.toLowerCase()) {\n    tokenBalance = bnToDec(new BigNumber(result._reserve1), decimals);\n    ethBalance = bnToDec(new BigNumber(result._reserve0));\n  } else {\n    tokenBalance = bnToDec(new BigNumber(result._reserve0), decimals);\n    ethBalance = bnToDec(new BigNumber(result._reserve1));\n  }\n  if (isEthOut) {\n    return ethBalance * amountIn / tokenBalance;\n  } else {\n    return tokenBalance * amountIn / ethBalance;\n  }\n}\n\nexport const getLPTVL = async () => {\n  try {\n    const result = await callMethod($888BNBPairContract.contract.methods['getReserves'], []);\n    const $888Balance = bnToDec(new BigNumber(result._reserve0));\n    const ethBalance = bnToDec(new BigNumber(result._reserve1));\n    const $888Price = await get$888Price();\n    const ethPrice = await getBNBPrice();\n    return $888Balance * $888Price + ethBalance * ethPrice;\n  } catch {\n    return 0;\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport { vaultContract } from './contracts';\nimport { callMethod, bnDivdedByDecimals, secondToDate, bnToDec } from './utils';\nimport { getLPBalance, getLPTotalSupply, getLPTVL } from './pancakev2pair';\nimport { get$888Price } from '../subgraphs/api';\n\nimport { web3 } from './web3';\n\n// Getters\nexport const getRewardPeriod = async () => {\n    const result = await callMethod(vaultContract.contract.methods['_rewardPeriod'], []);\n    return new BigNumber(result);\n}\n\nexport const getContractStartTime = async () => {\n    const result = await callMethod(vaultContract.contract.methods['_contractStartTime'], []);\n    return new BigNumber(result);\n}\n\nexport const getSwapReward = async (address) => {\n    const result = await callMethod(vaultContract.contract.methods['getSwapReward'], [address]);\n    return { pending: new BigNumber(result.pending), available: new BigNumber(result.available) };\n}\n\nexport const get$888Reward = async (address) => {\n    const result = await callMethod(vaultContract.contract.methods['get888Reward'], [address]);\n    return { pending: new BigNumber(result.pending), available: new BigNumber(result.available) };\n}\n\nexport const getTotalStakedAmount = async () => {\n    try {\n        const result = await callMethod(vaultContract.contract.methods['getTotalStakedAmount'], []);\n        return new BigNumber(result);\n    } catch {\n        return new BigNumber(0);\n    }\n}\n\nexport const getMinimumDepositAmount = async () => {\n    const result = await callMethod(vaultContract.contract.methods['_minDepositETHAmount'], []);\n    return new BigNumber(result);\n}\n\nexport const getUserTotalStakedAmount = async (address) => {\n    const result = await callMethod(vaultContract.contract.methods['_stakers'], [address]);\n    return bnDivdedByDecimals(new BigNumber(result.stakedAmount));\n}\n\nexport const getStakedUserInfo = async (address) => {\n    const result = await callMethod(vaultContract.contract.methods['_stakers'], [address]);\n    const lockedTo = result.lockedTo;\n    const currentTimestamp = Math.floor(Date.now() / 1000);\n    const isLocked = currentTimestamp < lockedTo;\n    let endOfLock = 0;\n\n    if (isLocked) {\n        const dateObject = new Date(lockedTo * 1000);\n        endOfLock = dateObject.toLocaleString();\n    }\n\n    return { ...result, isLocked: isLocked, endOfLock: endOfLock, stakedAmount: new BigNumber(result.stakedAmount) };\n}\n\nexport const getRestTimeFor$888Rewards = async (address) => {\n    const result = await callMethod(vaultContract.contract.methods['_stakers'], [address]);\n    if (result.lastClimedBlockFor888Reward === '0') {\n        return secondToDate(0);\n    }\n    const blockCountFor2weeks = new BigNumber(await callMethod(vaultContract.contract.methods['_claimPeriodFor888Reward'], []));\n    const currentBlockNumber = new BigNumber(await web3.eth.getBlockNumber());\n    const restTime = new BigNumber(3).times(blockCountFor2weeks.minus(currentBlockNumber.minus(result.lastClimedBlockFor888Reward)));\n    return secondToDate(restTime.toNumber());\n}\n\nexport const getRestTimeForSwapRewards = async (address) => {\n    const result = await callMethod(vaultContract.contract.methods['_stakers'], [address]);\n    if (result.lastClimedBlockForSwapReward === '0') {\n        return secondToDate(0);\n    }\n    const blockCountFor3months = new BigNumber(await callMethod(vaultContract.contract.methods['_claimPeriodForSwapReward'], []));\n    const currentBlockNumber = new BigNumber(await web3.eth.getBlockNumber());\n    const restTime = new BigNumber(3).times(blockCountFor3months.minus(currentBlockNumber.minus(result.lastClimedBlockForSwapReward)));\n    return secondToDate(restTime.toNumber());\n}\n\nexport const getIsEnalbledLock = async () => {\n    const result = await callMethod(vaultContract.contract.methods['_enabledLock'], []);\n    return result;\n}\n\nexport const getBurnFee = async () => {\n    const result = await callMethod(vaultContract.contract.methods['_burnFee'], []);\n    return new BigNumber(result).times(new BigNumber(100)).div(new BigNumber(10000)).toString(10);\n}\n\nexport const getEarlyUnstakeFee = async () => {\n    const result = await callMethod(vaultContract.contract.methods['_earlyUnstakeFee'], []);\n    return new BigNumber(result).times(new BigNumber(100)).div(new BigNumber(10000)).toString(10);\n}\n\nexport const getLockPeriod = async () => {\n    const result = await callMethod(vaultContract.contract.methods['_lockPeriod'], []);\n    return new BigNumber(result);\n}\n\nexport const getVaultGovernance = async () => {\n    const result = await callMethod(vaultContract.contract.methods['governance'], []);\n    return result;\n}\n\nexport const getAllocPointForWBNB = async () => {\n    const result = await callMethod(vaultContract.contract.methods['_allocPointForWBNB'], []);\n    return new BigNumber(result).div(new BigNumber(10000));\n}\n\nexport const getAllocPointForBTCB = async () => {\n    const result = await callMethod(vaultContract.contract.methods['_allocPointForBTCB'], []);\n    return new BigNumber(result).div(new BigNumber(10000));\n}\n\nexport const getAllocPointForBIFI = async () => {\n    const result = await callMethod(vaultContract.contract.methods['_allocPointForBIFI'], []);\n    return new BigNumber(result).div(new BigNumber(10000));\n}\n\nexport const getTVL = async () => {\n    try {\n        const stakedLpAmount = await getLPBalance(vaultContract.address);\n        const LPTotalSupply = await getLPTotalSupply();\n\n        if (LPTotalSupply.eq(new BigNumber(0))) {\n            return new BigNumber(0);\n        }\n        const LPTVL = await getLPTVL();\n        return new BigNumber(LPTVL * bnToDec(stakedLpAmount) / bnToDec(LPTotalSupply));\n    } catch {\n        return new BigNumber(0);\n    }\n}\n\nexport const getWinners = async () => {\n    return await callMethod(vaultContract.contract.methods['getWinners'], []);\n}\n\nexport const getCollectedLotteryAmount = async () => {\n    const result = await callMethod(vaultContract.contract.methods['_collectedAmountForLottery'], []);\n    return new BigNumber(result / 10);\n}\n\nexport const getWinnersInfo = async () => {\n    const winners = await callMethod(vaultContract.contract.methods['getWinners'], []);\n    let winnersInfo = [];\n    for (let i = 0; i < winners; i++) {\n        const winner = await callMethod(vaultContract.contract.methods['winnerInfo'], [i]);\n        if (winner !== '' && winner != null) {\n            const dateObject = new Date(winner.timestamp * 1000);\n            winnersInfo.push({\n                address: winner.winner,\n                amount: new BigNumber(winner.amount),\n                timestamp: dateObject.toLocaleString()\n            });\n        }\n    }\n    return winnersInfo;\n}\n\nexport const getLotteryFee = async () => {\n    const fee = new BigNumber(await callMethod(vaultContract.contract.methods['_lotteryFee'], []));\n    return new BigNumber(fee).times(new BigNumber(100)).div(new BigNumber(10000)).toString(10);\n}\n\nexport const getLotteryLimit = async () => {\n    const limit = new BigNumber(await callMethod(vaultContract.contract.methods['_lotteryLimit'], []));\n    return new BigNumber(limit).div(new BigNumber(10).pow(18)).toString(10);\n}\n\nexport const getLotteryTotalPaidOut = async () => {\n    return new BigNumber(await callMethod(vaultContract.contract.methods['_lotteryPaidOut'], []));\n}\n\nexport const getAPY = async () => {\n    const stakedLpAmount = await getLPBalance(vaultContract.address);\n    const LPTotalSupply = await getLPTotalSupply();\n    const LPTVL = await getLPTVL();\n    const $888Price = await get$888Price();\n\n    if (LPTotalSupply.eq(new BigNumber(0))) {\n        return 0;\n    }\n    const poolTvl = new BigNumber(LPTVL * (stakedLpAmount.div(LPTotalSupply).toNumber()));\n\n    if (poolTvl.eq(new BigNumber(0))) {\n        return 0;\n    }\n\n    const $888PerBlock = new BigNumber(await callMethod(vaultContract.contract.methods['get888PerBlockFor888Reward'],[]));\n    const blockCountForYear = new BigNumber(2372500);\n    \n    return (1 + bnToDec($888PerBlock.times(blockCountForYear).div(poolTvl)) * $888Price) * 100;\n}\n","import BigNumber from 'bignumber.js';\nimport { $888Contract, vaultContract } from './contracts';\nimport { callMethod, bnDivdedByDecimals } from './utils';\nimport { getPairBalances, getLPTotalSupply } from './pancakev2pair.js';\nimport { getTotalStakedAmount } from './vault';\n\n// Getters\nexport const checkAllowance = async (owner, spender) => {\n  const result = await callMethod($888Contract.contract.methods['allowance'], [owner, spender]);\n  return bnDivdedByDecimals(new BigNumber(result));\n}\n\nexport const getBalance = async (address) => {\n  const result = await callMethod($888Contract.contract.methods['balanceOf'], [address]);\n  return new BigNumber(result);\n}\n\nexport const getTransferFee = async () => {\n  const result = await callMethod($888Contract.contract.methods['transferFee'], []);\n  return result;\n}\n\nexport const getVaultAddress = async () => {\n  const result = await callMethod($888Contract.contract.methods['$888Vault'], []);\n  return result;\n}\n\nexport const getPaused = async () => {\n  const result = await callMethod($888Contract.contract.methods['Paused'], []);\n  return result;\n}\n\nexport const getTokenGovernance = async () => {\n  const result = await callMethod($888Contract.contract.methods['governance'], []);\n  return result;\n}\n\nexport const getTotalSupply  = async () => {\n  return  new BigNumber(await callMethod($888Contract.contract.methods['totalSupply'], []));\n}\n\nexport const getCirculatingSupply  = async () => {\n  const result = new BigNumber(await callMethod($888Contract.contract.methods['totalSupply'], []));\n  const pairTokenBalances = await getPairBalances();\n  const LPTotalSupply = await getLPTotalSupply();\n  const totalStakedAmount =  await getTotalStakedAmount();\n  const $888AmountInVault = new BigNumber(await callMethod($888Contract.contract.methods['balanceOf'], [vaultContract.address]));\n  \n  if (LPTotalSupply.eq(new BigNumber(0))) {\n    return result;\n  }\n\n  const locked$888 = pairTokenBalances['$888'].times(totalStakedAmount.div(LPTotalSupply));\n  return result.minus(locked$888).minus($888AmountInVault);\n}\n\nexport const Approve  = async (spender, amount) => {\n  const result = await callMethod($888Contract.contract.methods['approve'], [spender, amount]);\n  return result;\n}\n\n\n","import React from 'react';\nimport './page.css';\n\n\nfunction Page({ children }) {\n    return (\n        <div className=\"page\">\n            {children}\n        </div>\n    );\n}\n\nexport default Page;","import React from 'react'\nimport './pageheader.css'\n\nfunction PageHeader({ title, content, alt, src }) {\n  return (\n    <div className='pageheader'>\n      <img className='pageheaderimg' src={src} alt={alt} />\n      <h2>{title}</h2>\n      <span className='content'>{content}</span>\n    </div>\n  )\n}\n\nexport default PageHeader\n","import React from 'react'\nimport './form.css'\n\nfunction Form({ title, children, text }) {\n  return (\n    <div className='form '>\n      <h4>{title}</h4>\n      <p className='styledtext'>{text}</p>\n      {children}\n    </div>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport './button.css'\n\nfunction Button({ children, onClickHandler, color }) {\n  return (\n    <>\n      {color === 'red' ? (\n        <div className='rbutton' onClick={(e) => onClickHandler(e)}>\n          {children}\n        </div>\n      ) : (\n        <div className='wbutton' onClick={(e) => onClickHandler(e)}>\n          {children}\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Button\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useState, useEffect } from 'react';\nimport './input.css';\n\n\nfunction Input({ name, value, onChangeHandler }) {\n    const [inputValue, setInputValue] = useState('0');\n\n    const onChange = (e) => {\n        if (e.target.value.match(/^[0-9,.]*$/g)) {\n            setInputValue(e.target.value);\n        }\n    }\n\n    const emitChange = useCallback(\n        async () => {\n            let event = {\n                target : {\n                    name: name,\n                    value: inputValue\n                }\n            };\n            onChangeHandler(event);\n        },\n        [inputValue],\n    )\n\n    useEffect(() => {\n        emitChange();\n    }, [inputValue, emitChange]);\n\n    return (\n        <input type=\"text\" name={name} className=\"myinput\" value={value} onChange={(e) => onChange(e)} />\n    );\n}\n\nexport default Input;","import React from 'react';\nimport './button.css';\n\n\nfunction LabelButton({ children, onClickHandler }) {\n    return (\n        <div className=\"labelButton\"\n            onClick={() => onClickHandler()}\n        >\n            {children}\n        </div>\n    );\n}\n\nexport default LabelButton;","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport Input from '../Input'\nimport LabelButton from '../Button/labelButton'\nimport './betctrl.css'\n\nfunction BetCtrl({ label, name, balance, currentVal, onChangeHandler }) {\n  const onMax = (e) => {\n    let event = {\n      target: {\n        name: name,\n        value: balance,\n      },\n    }\n    onChangeHandler(event)\n  }\n\n  return (\n    <Row className='mt-2 mb-2'>\n      <Col xs={10}>\n        <span className='label'>\n          {label}: {balance.toFixed(4)}\n        </span>\n      </Col>\n      <Col xs={2} className='text-right'>\n        <LabelButton onClickHandler={onMax}>Max</LabelButton>\n      </Col>\n      <Col sm={12} className='mt-2'>\n        <Input\n          name={name}\n          value={currentVal}\n          onChangeHandler={onChangeHandler}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default BetCtrl\n","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport './label.css'\n\nfunction Label({ label, balance }) {\n  return (\n    <Row className=''>\n      <Col xl={12}>\n        <span className='form-label'>\n          {label}: {balance}\n        </span>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Label\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction ConfirmModal({title, content, setShowConfirmModal, setIsConfirmed}) {\n    return (\n        <StyledModal\n            show={true}\n            onHide={() => setShowConfirmModal(false)}\n            centered\n        >\n            <Modal.Title>{title}</Modal.Title>\n            <Modal.Body>{content}</Modal.Body>\n            <Modal.Footer>\n                <Button primary=\"secondary\" onClick = {() => { setShowConfirmModal(false); setIsConfirmed(false);}}>Cancel</Button>\n                <Button primary=\"secondary\" onClick = {() => { setShowConfirmModal(false); setIsConfirmed(true);}}>Confirm</Button>\n            </Modal.Footer>\n        </StyledModal>\n    );\n}\n\nexport const StyledModal = styled(Modal)`\n    .modal-title {\n        font-size: 25px;\n        text-align: center;\n        padding-top: 10px;\n    }\n\n    .modal-dialog {\n       padding-right: 0px!important;\n    }\n\n    .modal-content {\n        height: 100% !important;\n        background-color: #0a132bbf;\n        border-radius: 1.3rem;\n        color: white;\n    }\n\n    .modal-header {\n        border-bottom: 1px solid #515356;\n    }\n\n    .modal-footer {\n        border-top: 0px solid #515356;\n        padding-top: 0px;\n        justify-content: center;\n        .btn {\n            border-radius: 10px;\n        }\n        .confirm {\n            background: #55c448;\n        }\n        .slippage-text {\n            width: 100px;\n            &::-webkit-inner-spin-button {\n                -webkit-appearance: none;\n                margin: 0;\n            }\n            &:focus {\n                outline: none;\n            }\n        }\n        .postfix {\n            margin-left: -25px;\n            margin-right: 10px;\n            color: black;\n        }\n    }\n\n    .modal-body {\n        text-align: center;\n        p {\n            font-size: 18px;\n            margin-top: 15px;\n            \n        }\n        @media only screen and (max-width: 1450px) {\n            padding: 20px 20px 10px !important;\n        }\n    }\n`;\n\nConfirmModal.propTypes = {\n    trxHash: PropTypes.any,\n    setShowEtherscanModal: PropTypes.func\n}\n\nexport default ConfirmModal;\n","export default __webpack_public_path__ + \"static/media/stadistics.df5386cb.svg\";","export default __webpack_public_path__ + \"static/media/ox.fda447e3.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BigNumber from \"bignumber.js\";\nimport {\n  bnMultipledByDecimals,\n  bnDivdedByDecimals,\n  getBNBBalance,\n  bnToDec,\n} from \"../../$888/utils\";\nimport {\n  getCirculatingSupply,\n  getTotalSupply,\n  getBalance,\n} from \"../../$888/token\";\nimport {\n  getTotalStakedAmount,\n  getUserTotalStakedAmount,\n  getMinimumDepositAmount,\n  getSwapReward,\n  get$888Reward,\n  getAllocPointForWBNB,\n  getAllocPointForBTCB,\n  getAllocPointForBIFI,\n  getTVL,\n  getRestTimeFor$888Rewards,\n  getRestTimeForSwapRewards,\n  getIsEnalbledLock,\n  getStakedUserInfo,\n  getAPY,\n  getBurnFee,\n  getEarlyUnstakeFee,\n} from \"../../$888/vault\";\nimport { get$888Price, getMarketcap } from \"../../subgraphs/api\";\nimport {\n  networkId,\n  vaultContract,\n  $888BNBPairContract,\n  bifiBNBPairContract,\n  btcbBNBPairContract,\n} from \"../../$888/contracts\";\nimport { getAmountOut } from \"../../$888/pancakev2pair\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { NotificationManager } from \"react-notifications\";\nimport Page from \"../../components/Page\";\nimport PageHeader from \"../../components/PageHeader\";\nimport Form from \"../../components/Form\";\nimport Button from \"../../components/Button\";\nimport BetCtrl from \"../../components/BetCtrl\";\nimport Label from \"../../components/Label\";\nimport ConfirmModal from \"../../components/ConfirmModal\";\nimport \"react-notifications/lib/notifications.css\";\nimport { css } from \"@emotion/core\";\nimport ClockLoader from \"react-spinners/ClockLoader\";\nimport { sendTransaction, mobileSendTransaction } from \"../../$888/utils\";\nimport { isMobile } from \"react-device-detect\";\nimport \"./index.css\";\n\nimport stats from \"../../icons/stadistics.svg\";\nimport vault from \"../../icons/ox.svg\";\n\nconst override = css`\n  position: absolute;\n  display: block;\n  z-index: 1;\n  margin: 15% 30%;\n  border-color: red;\n`;\n\nfunction Vault() {\n  const address = useSelector((state) => state.authUser.address);\n  const currentNetworkId = useSelector((state) => state.authUser.networkId);\n\n  BigNumber.config({\n    DECIMAL_PLACES: 18,\n    FORMAT: {\n      // string to prepend\n      prefix: \"\",\n      // decimal separator\n      decimalSeparator: \".\",\n      // grouping separator of the integer part\n      groupSeparator: \",\",\n      // primary grouping size of the integer part\n      groupSize: 3,\n    },\n  });\n\n  const [values, setValues] = useState({\n    stakeAmount: \"0\",\n    unstakeAmount: \"0\",\n    claimAmount: \"0\",\n  });\n\n  const [progress, setProgress] = useState(false);\n\n  const [totalSupply, setTotalSupply] = useState(new BigNumber(0));\n  const [circulatingSupply, setCirculatingSupply] = useState(new BigNumber(0));\n  const [tvl, setTVL] = useState(new BigNumber(0));\n\n  const [$888Price, set$888Price] = useState(0);\n  const [marketcap, setMarketcap] = useState(0);\n  const [totalStakedAmount, setTotalStakedAmount] = useState(new BigNumber(0));\n  const [userBalance, setUserBalance] = useState(new BigNumber(0));\n  const [userTotalStakedAmount, setUserTotalStakedAmount] = useState(\n    new BigNumber(0)\n  );\n  const [minDepositAmount, setMinDepositAmount] = useState(new BigNumber(0));\n  const [userBNBBalance, setUserBNBBalance] = useState(new BigNumber(0));\n  const [userSwapReward, setUserSwapReward] = useState({});\n  const [user$888Reward, setUser$888Reward] = useState({});\n  const [isEnabledLock, setIsEnalbledLock] = useState(true);\n  const [stakedUserInfo, setStakedUserInfo] = useState({});\n\n  const [userWbnbAvailableReward, setUserWbnbAvailableReward] = useState(\n    new BigNumber(0)\n  );\n  const [userBtcbAvailableReward, setUserBtcbAvailableReward] = useState(\n    new BigNumber(0)\n  );\n  const [userBifiAvailableReward, setUserBifiAvailableReward] = useState(\n    new BigNumber(0)\n  );\n\n  const [userWbnbPendingReward, setUserWbnbPendingReward] = useState(0);\n  const [userBtcbPendingReward, setUserBtcbPendingReward] = useState(0);\n  const [userBifiPendingReward, setUserBifiPendingReward] = useState(0);\n\n  const [pending$888Value, setPending$888Value] = useState(new BigNumber(0));\n  const [available$888Value, setAvailable$888Value] = useState(\n    new BigNumber(0)\n  );\n\n  const [timerID, setTimerID] = useState(0);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(\"\");\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [isTreasury, setIsTreasury] = useState(false);\n  const [isUnstake, setIsUnstake] = useState(false);\n  const [burnFee, setBurnFee] = useState(0);\n  const [earlyUnstakeFee, setEarlyUnstakeFee] = useState(0);\n\n  const [apy, setApy] = useState(0);\n\n  let transactionType = \"\";\n\n  const fetchAllDataFromContract = useCallback(\n    async (firstFlag = false, transactionType = \"\") => {\n      setTotalSupply(await getTotalSupply());\n      setCirculatingSupply(await getCirculatingSupply());\n      setTVL(await getTVL());\n      set$888Price(await get$888Price());\n      setMarketcap(await getMarketcap());\n      setTotalStakedAmount(await getTotalStakedAmount());\n      setUserBalance(await getBalance(address));\n      setUserTotalStakedAmount(await getUserTotalStakedAmount(address));\n      setUserBNBBalance(await getBNBBalance(address));\n      setUserSwapReward(await getSwapReward(address));\n      setUser$888Reward(await get$888Reward(address));\n      setIsEnalbledLock(await getIsEnalbledLock());\n      setStakedUserInfo(await getStakedUserInfo(address));\n      setApy(await getAPY());\n    },\n    [address]\n  );\n\n  useEffect(() => {\n    if (address) {\n      if (timerID > 0) clearInterval(timerID);\n\n      let tempTimerID = setInterval(async () => {\n        fetchAllDataFromContract();\n      }, 13000);\n\n      setTimerID(tempTimerID);\n      fetchAllDataFromContract(true);\n    }\n  }, [address]);\n\n  useEffect(() => {\n    const bn$888Price = new BigNumber($888Price);\n    setPending$888Value(bn$888Price.times(user$888Reward.pending));\n    setAvailable$888Value(bn$888Price.times(user$888Reward.available));\n  }, [user$888Reward, $888Price]);\n\n  useEffect(async () => {\n    if (\n      userSwapReward.pending &&\n      userSwapReward.pending.isGreaterThan(new BigNumber(0))\n    ) {\n      const wbnbEstimateAmount = await getAmountOut(\n        $888BNBPairContract,\n        bnToDec(userSwapReward.pending),\n        true\n      );\n      const wbnbRewardAmount = new BigNumber(wbnbEstimateAmount).times(\n        await getAllocPointForWBNB()\n      );\n      const btcbRewardAmount = new BigNumber(wbnbEstimateAmount).times(\n        await getAllocPointForBTCB()\n      );\n      const bifiRewardAmount = new BigNumber(wbnbEstimateAmount).times(\n        await getAllocPointForBIFI()\n      );\n\n      setUserWbnbPendingReward(wbnbRewardAmount);\n      setUserBtcbPendingReward(\n        await getAmountOut(\n          btcbBNBPairContract,\n          btcbRewardAmount.toNumber(),\n          false\n        )\n      );\n      setUserBifiPendingReward(\n        await getAmountOut(\n          bifiBNBPairContract,\n          bifiRewardAmount.toNumber(),\n          false\n        )\n      );\n    } else {\n      setUserWbnbPendingReward(new BigNumber(0));\n      setUserBtcbPendingReward(new BigNumber(0));\n      setUserBifiPendingReward(new BigNumber(0));\n    }\n\n    if (\n      userSwapReward.available &&\n      userSwapReward.available.isGreaterThan(new BigNumber(0))\n    ) {\n      const wbnbEstimateAmount = await getAmountOut(userSwapReward.available);\n      const wbnbRewardAmount = wbnbEstimateAmount\n        .times(await getAllocPointForWBNB())\n        .div(1e18);\n      const btcbRewardAmount = wbnbEstimateAmount\n        .times(await getAllocPointForBTCB())\n        .div(1e18);\n      const bifiRewardAmount = wbnbEstimateAmount\n        .times(await getAllocPointForBIFI())\n        .div(1e18);\n\n      setUserWbnbAvailableReward(wbnbRewardAmount);\n      setUserBtcbAvailableReward(\n        await getAmountOut(btcbBNBPairContract, btcbRewardAmount, false)\n      );\n      setUserBifiAvailableReward(\n        await getAmountOut(bifiBNBPairContract, bifiRewardAmount, false)\n      );\n    } else {\n      setUserWbnbAvailableReward(new BigNumber(0));\n      setUserBtcbAvailableReward(new BigNumber(0));\n      setUserBifiAvailableReward(new BigNumber(0));\n    }\n  }, [userSwapReward]);\n\n  useEffect(async () => {\n    setMinDepositAmount(await getMinimumDepositAmount());\n    setBurnFee(await getBurnFee());\n    setEarlyUnstakeFee(await getEarlyUnstakeFee());\n  }, []);\n\n  const onChangeHandler = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const transactionDone = () => {\n    setValues({\n      stakeAmount: \"0\",\n      unstakeAmount: \"0\",\n      claimAmount: \"0\",\n    });\n    setProgress(false);\n    fetchAllDataFromContract(false, transactionType);\n  };\n\n  const transactionError = (err) => {\n    setProgress(false);\n  };\n\n  const onStake = async (event) => {\n    if (address == null || progress || values.stakeAmount === \"\" || !values)\n      return;\n\n    const stakeAmount = bnMultipledByDecimals(\n      new BigNumber(values.stakeAmount)\n    );\n\n    if (stakeAmount.lt(minDepositAmount)) {\n      NotificationManager.warning(\n        `Minimum deposit amount is ${bnToDec(minDepositAmount).toFixed(1)} BNB`\n      );\n      return;\n    }\n\n    setProgress(true);\n\n    const encodedABI = vaultContract.contract.methods.stake().encodeABI();\n\n    transactionType = \"stake\";\n\n    if (isMobile)\n      await mobileSendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError,\n        stakeAmount.toString(10)\n      );\n    else\n      await sendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError,\n        stakeAmount.toString(10)\n      );\n  };\n\n  const onClaimAvailable$888Reward = async (event) => {\n    if (address == null || progress) return;\n\n    const available = user$888Reward.available;\n\n    if (!available || available.lte(new BigNumber(0))) {\n      NotificationManager.warning(`There are no available $888 rewards.`);\n      return;\n    }\n\n    setProgress(true);\n\n    const encodedABI = vaultContract.contract.methods\n      .claim$888AvailableReward()\n      .encodeABI();\n    transactionType = \"claim$888AvailableReward\";\n\n    if (isMobile)\n      await mobileSendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError\n      );\n    else\n      await sendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError\n      );\n  };\n\n  const onShowConfirmModalFor$888 = async () => {\n    const restTime = await getRestTimeFor$888Rewards(address);\n    if (restTime === '0 seconds') {\n      NotificationManager.warning(\n        `There are no available $888 DAO rewards.`\n      );\n      return;\n    }\n    setShowConfirmModal(true);\n    setModalTitle(\"Notes\");\n    setIsTreasury(true);\n    setIsUnstake(false);\n    setModalContent(\n      \"Early withdrawal of your rewards will result in a \" +\n        burnFee +\n        \"% burn of your rewards. You should wait \" +\n        restTime +\n        \"  more days to claim your rewards without the penalty. Do you want to continue?\"\n    );\n  };\n\n  const onShowConfirmModalForQuarterly = async () => {\n    const restTime = await getRestTimeForSwapRewards(address);\n    if (restTime === '0 seconds') {\n      NotificationManager.warning(\n        `There are no available WBNB/BIFI/BTCB rewards.`\n      );\n      return;\n    }\n    setShowConfirmModal(true);\n    setModalTitle(\"Notes\");\n    setIsTreasury(false);\n    setIsUnstake(false);\n    setModalContent(\n      \"Early withdrawal of your Red Envelope rewards will result in a \" +\n        burnFee +\n        \"% burn of your rewards. You should wait \" +\n        restTime +\n        \" more days to claim your rewards without the penalty. Do you want to continue?\"\n    );\n  };\n\n  const onShowConfirmModalForUnstake = async () => {\n    if (isEnabledLock) {\n      if (stakedUserInfo.isLocked) {\n        setShowConfirmModal(true);\n        setModalTitle(\"Notes\");\n        setModalContent(\n          \"Approximately pool has been locked till \" +\n            stakedUserInfo.endOfLock +\n            \". If you want to unstake early, \" +\n            earlyUnstakeFee +\n            \"% of LP token will go to DAO treasury, and \" +\n            burnFee +\n            \"% of pending rewards will be burned.\"\n        );\n      } else {\n        await onUnstake();\n        setIsUnstake(false);\n      }\n    }\n    setIsUnstake(true);\n  };\n\n  useEffect(async () => {\n    if (isConfirmed === true) {\n      if (isTreasury) {\n        await onClaim$888Reward();\n      } else if (isUnstake) {\n        await onUnstake();\n        setIsUnstake(false);\n      } else {\n        await onClaimSwapReward();\n      }\n      setIsConfirmed(false);\n    }\n  }, [isConfirmed]);\n\n  const onClaim$888Reward = async (event) => {\n    const rewards = user$888Reward.pending.plus(user$888Reward.available);\n    if (address == null || progress) return;\n\n    if (!rewards || rewards.lte(new BigNumber(0))) {\n      NotificationManager.warning(`There are no $888 rewards.`);\n      return;\n    }\n\n    setProgress(true);\n\n    const encodedABI = vaultContract.contract.methods\n      .claim888Reward()\n      .encodeABI();\n    transactionType = \"claim$888Reward\";\n\n    if (isMobile)\n      await mobileSendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError\n      );\n    else\n      await sendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError\n      );\n  };\n\n  const onClaimAvailableSwapReward = async (event) => {\n    if (address == null || progress) return;\n\n    const available = userSwapReward.available;\n    if (!available || available.lte(new BigNumber(0))) {\n      NotificationManager.warning(\n        `There are no available WBNB/BTCB/BIFI rewards.`\n      );\n      return;\n    }\n\n    setProgress(true);\n\n    const encodedABI = vaultContract.contract.methods\n      .claimSwapAvailableReward()\n      .encodeABI();\n    transactionType = \"claimSwapAvailableReward\";\n\n    if (isMobile)\n      await mobileSendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError\n      );\n    else\n      await sendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError\n      );\n  };\n\n  const onClaimSwapReward = async (event) => {\n    const rewards = userSwapReward.pending.plus(userSwapReward.available);\n    if (address == null || progress) return;\n\n    if (!rewards || rewards.lte(new BigNumber(0))) {\n      NotificationManager.warning(`There are no WBNB/BTCB/BIFI rewards.`);\n      return;\n    }\n\n    setProgress(true);\n\n    const encodedABI = vaultContract.contract.methods\n      .claimSwapReward()\n      .encodeABI();\n    transactionType = \"claimSwapReward\";\n\n    if (isMobile)\n      await mobileSendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError\n      );\n    else\n      await sendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError\n      );\n  };\n\n  const onUnstake = async (event) => {\n    if (address == null || progress || values.unstakeAmount === \"\" || !values)\n      return;\n\n    const unstakeAmount = bnMultipledByDecimals(\n      new BigNumber(values.unstakeAmount)\n    );\n    const userTotalStakedAmountBn = bnMultipledByDecimals(\n      userTotalStakedAmount\n    );\n\n    if (\n      unstakeAmount.gt(userTotalStakedAmountBn) ||\n      unstakeAmount.lte(new BigNumber(0))\n    ) {\n      NotificationManager.warning(`Invalid amount to unstake.`);\n      return;\n    }\n\n    setProgress(true);\n\n    const encodedABI = vaultContract.contract.methods\n      .unstake(unstakeAmount.toString(10))\n      .encodeABI();\n    transactionType = \"unstake\";\n\n    if (isMobile)\n      await mobileSendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError\n      );\n    else\n      await sendTransaction(\n        address,\n        vaultContract.address,\n        encodedABI,\n        transactionDone,\n        transactionError\n      );\n  };\n\n  return (\n    <Page>\n      <PageHeader title=\"888 STATS\" src={stats} alt={stats} />\n\n      <ClockLoader\n        css={override}\n        size={150}\n        color={\"#ffff00\"}\n        loading={progress}\n      />\n\n      {networkId === currentNetworkId ? (\n        <>\n          <Row>\n            <Col xs={12} sm={4}>\n              <Form title=\"TOTAL SUPPLY\">\n                <span className=\"numberSpan\">\n                  {bnDivdedByDecimals(totalSupply).toFormat(4)} 888\n                </span>\n              </Form>\n            </Col>\n            <Col xs={12} sm={4}>\n              <Form title=\"CIRCULATING SUPPLY\">\n                <span className=\"numberSpan\">\n                  {bnDivdedByDecimals(circulatingSupply).toFormat(4)} 888\n                </span>\n              </Form>\n            </Col>\n            <Col xs={12} sm={4}>\n              <Form title=\"YOUR 888 BALANCE\">\n                <span className=\"numberSpan\">\n                  {bnDivdedByDecimals(userBalance).toFormat(4)} 888\n                </span>\n              </Form>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={12} sm={4}>\n              <Form title=\"MARKETCAP\">\n                <span className=\"numberSpan\">\n                  ${new BigNumber(marketcap).toFormat(2)}\n                </span>\n              </Form>\n            </Col>\n            <Col xs={12} sm={4}>\n              <Form title=\"888 PRICE\">\n                <span className=\"numberSpan\">\n                  ${new BigNumber($888Price).toFormat(2)}\n                </span>\n              </Form>\n            </Col>\n            <Col xs={12} sm={4}>\n              <Form title=\"TOTAL VALUE LOCKED\">\n                <span className=\"numberSpan\">\n                  ${tvl.toFormat(2)} (\n                  {bnDivdedByDecimals(totalStakedAmount).toFormat(4)} LP)\n                </span>\n              </Form>\n            </Col>\n          </Row>\n\n          <PageHeader title=\"888-BNB LP VAULT\" src={vault} alt={vault} />\n\n          <Row>\n            <Col xs={12} md={4} style={{ lineHeight: \"1.3\" }}>\n              <Form\n                title={`1-CLICK STAKING (APY: ${new BigNumber(apy).dp(2, 0).toString(10).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} %)`}\n                text={\n                  \"Deposit BNB to earn staking rewards in 888, BIFI, BTCB and wBNB. Staked LPs are locked for 90 days and there is a 10% unstaking fee which goes to the Treasury. Lock time and unstake fee can be changed via voting\"\n                }\n              >\n                <Row className=\"vaultDiv\">\n                  <Col xs={12}>\n                    <Row>\n                      <Col md={12}>\n                        <BetCtrl\n                          label=\"My BNB\"\n                          name=\"stakeAmount\"\n                          balance={userBNBBalance}\n                          currentVal={values.stakeAmount}\n                          onChangeHandler={onChangeHandler}\n                        />\n                      </Col>\n                      <Col md={12}>\n                        <Button onClickHandler={onStake} color=\"red\">\n                          Deposit & Stake\n                        </Button>\n                      </Col>\n                      {/* <Col md={12}>\n                                                    <Label\n                                                        label='Staked'\n                                                        balance={userTotalStakedAmount.toFormat(4) + ' LP'}\n                                                    />\n                                                </Col> */}\n                      {/* <Col md={12}>\n                                                        <Label\n                                                            label='Rank (Users)'\n                                                            balance={userRank + ' (' + totalUsers + ')'}\n                                                        />\n                                                        </Col> */}\n                      <Col md={12}>\n                        <BetCtrl\n                          label=\"Staked LP\"\n                          name=\"unstakeAmount\"\n                          balance={userTotalStakedAmount}\n                          currentVal={values.unstakeAmount}\n                          onChangeHandler={onChangeHandler}\n                        />\n                      </Col>\n                      <Col md={12}>\n                        <Button\n                          onClickHandler={onShowConfirmModalForUnstake}\n                          color=\"red\"\n                        >\n                          Claim & Unstake\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Form>\n            </Col>\n            <Col xs={12} md={4}>\n              <Form\n                title=\"888 REWARDS\"\n                text=\"888 Rewards are vested for 2 weeks and are claimable early for a 10% penalty that goes to the DAO treasury\"\n              >\n                <Row className=\"vaultDiv\">\n                  <Col xl={12}>\n                    <Row>\n                      <Col xl={12}>\n                        <Label\n                          label=\"Pending 888\"\n                          balance={\n                            user$888Reward.pending\n                              ? bnDivdedByDecimals(\n                                  user$888Reward.pending\n                                ).toFormat(4) +\n                                \" ($\" +\n                                bnDivdedByDecimals(pending$888Value).toFormat(\n                                  2\n                                ) +\n                                \")\"\n                              : 0 + \"($0)\"\n                          }\n                        />\n                      </Col>\n                      <Col xl={12}>\n                        <Label\n                          label=\"Available 888\"\n                          balance={\n                            user$888Reward.available\n                              ? bnDivdedByDecimals(\n                                  user$888Reward.available\n                                ).toFormat(4) +\n                                \" ($\" +\n                                bnDivdedByDecimals(available$888Value).toFormat(\n                                  2\n                                ) +\n                                \")\"\n                              : 0 + \"($0)\"\n                          }\n                        />\n                      </Col>\n                      <Col xl={12}>\n                        <Button\n                          onClickHandler={onClaimAvailable$888Reward}\n                          color=\"red\"\n                        >\n                          Claim Available\n                        </Button>\n                      </Col>\n                      <Col xl={12}>\n                        <Button\n                          onClickHandler={onShowConfirmModalFor$888}\n                          color=\"white\"\n                        >\n                          Claim Early\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Form>\n            </Col>\n            <Col xs={12} md={4}>\n              <Form\n                title=\"RED ENVELOPE REWARDS\"\n                text=\"Red Envelope (BIFI/BTCB/wBNB) rewards are vested for 90 days and are claimable early for a 20% fee which is used to market-buy and burn 888\"\n              >\n                <Row className=\"vaultDiv\">\n                  <Col xs={12}>\n                    <Row>\n                      <Col xs={6} md={6}>\n                        <Label label=\"Pending\" />\n                        <Label\n                          label=\"WBNB\"\n                          balance={\n                            userWbnbPendingReward\n                              ? userWbnbPendingReward.toFixed(4)\n                              : 0\n                          }\n                        />\n                        <Label\n                          label=\"BTCB\"\n                          balance={\n                            userBtcbPendingReward\n                              ? userBtcbPendingReward.toFixed(4)\n                              : 0\n                          }\n                        />\n                        <Label\n                          label=\"BIFI\"\n                          balance={\n                            userBifiPendingReward\n                              ? userBifiPendingReward.toFixed(4)\n                              : 0\n                          }\n                        />\n                      </Col>\n                      <Col xs={6} md={6}>\n                        <Label label=\"Available\" />\n                        <Label\n                          label=\"WBNB\"\n                          balance={\n                            userWbnbAvailableReward\n                              ? userWbnbAvailableReward.toFormat(4)\n                              : 0\n                          }\n                        />\n                        <Label\n                          label=\"BTCB\"\n                          balance={\n                            userBtcbAvailableReward\n                              ? userBtcbAvailableReward.toFormat(4)\n                              : 0\n                          }\n                        />\n                        <Label\n                          label=\"BIFI\"\n                          balance={\n                            userBifiAvailableReward\n                              ? userBifiAvailableReward.toFormat(4)\n                              : 0\n                          }\n                        />\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col xs={12}>\n                        <Button\n                          onClickHandler={onClaimAvailableSwapReward}\n                          color=\"red\"\n                        >\n                          Claim Available\n                        </Button>\n                      </Col>\n                      <Col xs={12}>\n                        <Button\n                          onClickHandler={onShowConfirmModalForQuarterly}\n                          color=\"white\"\n                        >\n                          Claim Early\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        </>\n      ) : (\n        <>\n          <Row>\n            <Col xs={12}>\n              <Form title=\"Warning\">\n                <Row>\n                  <Col xs={12} className=\"pt-3\">\n                    <span>Unable to connect wallet</span>\n                    <br />\n                    <span>\n                      Please change your MetaMask to access the{\" \"}\n                      {networkId === \"56\" ? \"Main\" : \"Testnet\"} Binance Smart\n                      Chain.\n                    </span>\n                  </Col>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        </>\n      )}\n      {showConfirmModal && (\n        <ConfirmModal\n          title={modalTitle}\n          content={modalContent}\n          setShowConfirmModal={setShowConfirmModal}\n          setIsConfirmed={setIsConfirmed}\n        />\n      )}\n    </Page>\n  );\n}\n\nexport default Vault;\n","export default __webpack_public_path__ + \"static/media/lottery.a9b2005c.svg\";","export default __webpack_public_path__ + \"static/media/winners.a4405ca7.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport BigNumber from \"bignumber.js\";\nimport { get$888Price } from \"../../subgraphs/api\";\nimport { networkId } from \"../../$888/contracts\";\nimport {\n  getWinners,\n  getWinnersInfo,\n  getCollectedLotteryAmount,\n  getLotteryTotalPaidOut,\n  getLotteryFee,\n  getLotteryLimit,\n} from \"../../$888/vault\";\nimport { bnToDec } from \"../../$888/utils\";\nimport { Row, Col } from \"react-bootstrap\";\nimport PageHeader from \"../../components/PageHeader\";\nimport Form from \"../../components/Form\";\nimport \"react-notifications/lib/notifications.css\";\nimport Page from \"../../components/Page\";\nimport \"./index.css\";\n\nimport lottery from \"../../icons/lottery.svg\";\nimport win from \"../../icons/winners.svg\";\n\nfunction Lottery() {\n  const address = useSelector((state) => state.authUser.address);\n  const currentNetworkId = useSelector((state) => state.authUser.networkId);\n\n  BigNumber.config({\n    DECIMAL_PLACES: 18,\n    FORMAT: {\n      // string to prepend\n      prefix: \"\",\n      // decimal separator\n      decimalSeparator: \".\",\n      // grouping separator of the integer part\n      groupSeparator: \",\",\n      // primary grouping size of the integer part\n      groupSize: 3,\n    },\n  });\n\n  const [$888Price, set$888Price] = useState(0);\n  const [winners, setWinners] = useState(0);\n  const [lotteryAmount, setLotteryAmount] = useState(new BigNumber(0));\n  const [winnersInfo, setWinnersInfo] = useState([]);\n  const [poolValue, setPoolValue] = useState(new BigNumber(0));\n  const [totalPaidOut, setTotalPaidOut] = useState(new BigNumber(0));\n  const [totalPaidOutValue, setTotalPaidOutValue] = useState(new BigNumber(0));\n  const [lotteryFee, setLotteryFee] = useState(0);\n  const [lotteryLimit, setLotteryLimit] = useState(0);\n\n  const [timerID, setTimerID] = useState(0);\n\n  const fetchAllDataFromContract = useCallback(\n    async (firstFlag = false, transactionType = \"\") => {\n      set$888Price(await get$888Price());\n      setWinners(await getWinners());\n      setLotteryAmount(await getCollectedLotteryAmount());\n      setWinnersInfo(await getWinnersInfo());\n      setTotalPaidOut(await getLotteryTotalPaidOut());\n      setLotteryFee(await getLotteryFee());\n      setLotteryLimit(await getLotteryLimit());\n    },\n    [address]\n  );\n\n  useEffect(() => {\n    if (address) {\n      if (timerID > 0) clearInterval(timerID);\n\n      let tempTimerID = setInterval(async () => {\n        fetchAllDataFromContract();\n      }, 120000);\n\n      setTimerID(tempTimerID);\n      fetchAllDataFromContract(true);\n    }\n  }, [address]);\n\n  useEffect(() => {\n    setPoolValue(new BigNumber($888Price).times(lotteryAmount));\n    setTotalPaidOutValue(new BigNumber($888Price).times(totalPaidOut));\n  }, [$888Price, lotteryAmount, totalPaidOut]);\n\n  return (\n    <Page>\n      <PageHeader title=\"888 LOTTERY\" src={lottery} alt={lottery} />\n\n      {networkId === currentNetworkId ? (\n        <>\n          <Row>\n            <Col xs={12} sm={12}>\n              <Form title=\"How it works\">\n              <span className='textSpan' style={{textTransform: 'none'}}>\n                  {lotteryFee}% of the collected tax from staking rewards is\n                  added to the lottery pool. Each time the lottery pool reaches\n                  a value of ${lotteryLimit} USD, a random LP staker gets\n                  selected as the winner. Winner takes all!\n                </span>\n              </Form>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={12} sm={4}>\n              <Form title=\"CURRENT POOL\">\n                <span className=\"numberSpan\">\n                  ${bnToDec(poolValue).toFixed(2)} (\n                  {bnToDec(lotteryAmount).toFixed(4)} 888)\n                </span>\n              </Form>\n            </Col>\n            <Col xs={12} sm={4}>\n              <Form title=\"TOTAL WINNERS\">\n                <span className=\"numberSpan\">{winners}</span>\n              </Form>\n            </Col>\n            <Col xs={12} sm={4}>\n              <Form title=\"TOTAL PAID OUT\">\n                <span className=\"numberSpan\">\n                  ${bnToDec(totalPaidOutValue).toFixed(2)} (\n                  {bnToDec(totalPaidOut).toFixed(4)} 888)\n                </span>\n              </Form>\n            </Col>\n          </Row>\n\n          <PageHeader title=\"WINNERS\" src={win} alt={win} />\n\n          <Row>\n            <Col xs={12} md={12}>\n              <Form title=\"\">\n                <Row\n                  style={{\n                    overflowY: \"auto\",\n                    height: \"400px\",\n                  }}\n                >\n                  <Col xs={4} md={4}>\n                    <Row className=\"winner-title\">\n                      <Col xl={12}>\n                        <p style={{ color: \"#010A35\" }}>ADDRESS</p>\n                      </Col>\n                    </Row>\n                    {winnersInfo?.map((element, index) => (\n                      <Row key={index}>\n                        <Col xl={12}>{element.address}</Col>\n                      </Row>\n                    ))}\n                  </Col>\n                  <Col xs={4} md={4}>\n                    <Row className=\"winner-title\">\n                      <Col xl={12}>\n                        <p style={{ color: \"#010A35\" }}>TRANSACTION TIME</p>\n                      </Col>\n                    </Row>\n                    {winnersInfo?.map((element, index) => (\n                      <Row key={index}>\n                        <Col xl={12}>{element.timestamp}</Col>\n                      </Row>\n                    ))}\n                  </Col>\n                  <Col xs={4} md={4}>\n                    <Row className=\"winner-title\">\n                      <Col xl={12}>\n                        <p style={{ color: \"#010A35\" }}>PRIZE </p>\n                      </Col>\n                    </Row>\n                    {winnersInfo?.map((element, index) => (\n                      <Row key={index}>\n                        <Col xl={12}>\n                          {bnToDec(element.amount).toFixed(4)} $888 ($\n                          {bnToDec(\n                            new BigNumber($888Price).times(element.amount)\n                          ).toFixed(2)}\n                          )\n                        </Col>\n                      </Row>\n                    ))}\n                  </Col>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        </>\n      ) : (\n        <>\n          <Row>\n            <Col xs={12}>\n              <Form title=\"Warning\">\n                <Row>\n                  <Col xs={12} className=\"pt-3\">\n                    <span>Unable to connect wallet</span>\n                    <br />\n                    <span>\n                      Please change your MetaMask to access the{\" \"}\n                      {networkId === \"56\" ? \"Main\" : \"Testnet\"} Binance Smart\n                      Chain.\n                    </span>\n                  </Col>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        </>\n      )}\n    </Page>\n  );\n}\n\nexport default Lottery;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NotificationContainer } from 'react-notifications';\nimport { isMobile } from 'react-device-detect';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { setAddress, setNetworkId, setError } from './redux/actions';\nimport Layout from './layout';\nimport Vault from './views/vault';\nimport Lottery from './views/lottery';\nimport { Web3 } from './$888/web3';\nimport { useWallet } from 'use-wallet';\nimport bsc from '@binance-chain/bsc-use-wallet'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App({ setAddressRequest, setNetworkIdRequest, setErrorRequest }) {\n\n  const wallet = useWallet();\n\n  // console.log('App: wallet >>> ', wallet);\n  // console.log('App: bsc >>> ', bsc);\n\n  if (isMobile) {\n    if (wallet.status === 'connected') {\n      setAddressRequest(wallet.account);\n      setNetworkIdRequest(wallet.chainId.toString(10));\n    }\n  } else {\n    window.web3 = null;\n    // modern browsers\n    if (typeof wallet.ethereum !== 'undefined') {\n      window.web3 = new Web3(wallet.ethereum);\n      \n      // console.log('window.ethereum >>>', window.ethereum);\n      // console.log('wallet.ethereum >>>', wallet.ethereum);\n      // console.log('window.web3', window.web3);\n\n      window.web3.eth.net.getId((err, netId) => {\n        handleNetworkChanged(`${netId}`);\n        wallet.ethereum.on('accountsChanged', (accounts) =>\n          handleAddressChanged(accounts)\n        );\n        wallet.ethereum.on('chainChanged', (netId) =>\n          handleNetworkChanged(netId)\n        );\n        setAddressRequest(wallet.ethereum.selectedAddress);\n      });\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.web3 = null;\n    }\n  }\n\n  const handleAddressChanged = (accounts) => {\n    if (typeof wallet.ethereum !== 'undefined') {\n      setAddressRequest(wallet.ethereum.selectedAddress);\n    }\n  };\n\n  const handleNetworkChanged = (networkId) => {\n    setNetworkIdRequest(networkId);\n    switch (networkId) {\n      case '1':\n        // if (providerUrl.includes('mainnet')) {\n        //   this.props.setErrorRequest(false)\n        // } else {\n        //   this.props.setErrorRequest(true)\n        // }\n        break\n      case '3':\n        // if (providerUrl.includes('ropsten')) {\n        //   this.props.setErrorRequest(false)\n        // } else {\n        //   this.props.setErrorRequest(true)\n        // }\n        break\n      case '56':\n        if (!wallet.error) {\n          setErrorRequest(false);\n        } else {\n          setErrorRequest(true);\n        }\n        break;\n      case '97':\n        if (!wallet.error) {\n          setErrorRequest(false);\n        } else {\n          setErrorRequest(true);\n        }\n        break;\n      default:\n        setErrorRequest(true);\n    }\n  };\n\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Vault />\n          </Route>\n          <Route path=\"/vault\" exact>\n            <Vault />\n          </Route>\n          <Route path=\"/lottery\" exact>\n            <Lottery />\n          </Route>\n        </Switch>\n        <NotificationContainer />\n      </Layout>\n    </Router>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setAddressRequest: (address) => dispatch(setAddress(address)),\n    setNetworkIdRequest: (networkId) => dispatch(setNetworkId(networkId)),\n    setErrorRequest: (error) => dispatch(setError(error)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import {\n    SET_ADDRESS,\n    SET_NETWORKID,\n    SET_ERROR,\n} from '../actions';\n\nconst INIT_STATE = {\n    error: '',\n    address: null,\n    networkId: null\n};\n\nconst authReducer = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case SET_ADDRESS:\n            return { ...state, address: action.payload.address };\n        case SET_NETWORKID:\n            return { ...state, networkId: action.payload.networkId };\n        case SET_ERROR:\n            return { ...state, error: action.payload.error };\n        default: return { ...state };\n    }\n}\n\nexport default authReducer;","import { combineReducers } from 'redux';\nimport authUser from './auth/reducer';\n\n\nconst reducers = combineReducers({\n  authUser\n});\n\nexport default reducers;","\nimport { all } from 'redux-saga/effects';\n\nexport default function* rootSaga() {\n    yield all([        \n    ]);\n}","import { all } from 'redux-saga/effects';\nimport authSagas from './auth/saga';\n\n\nexport default function* rootSaga(getState) {\n  yield all([\n    authSagas()\n  ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from \"redux-saga\";\nimport reducers from './reducers';\nimport sagas from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState) {\n\n    const store = createStore(\n        reducers,\n        initialState,\n        compose(applyMiddleware(...middlewares))\n    );\n\n    sagaMiddleware.run(sagas);\n\n    if (module.hot) {\n        module.hot.accept('./reducers', () => {\n            const nextRootReducer = require('./reducers');\n            store.replaceReducer(nextRootReducer);\n        });\n    }\n\n    return store;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/VT323-Regular.1d510e1c.ttf\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\nimport reportWebVitals from './reportWebVitals';\nimport './fonts/VT323-Regular.ttf'\nimport { UseWalletProvider } from 'use-wallet';\nimport bsc from '@binance-chain/bsc-use-wallet'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <UseWalletProvider\n        chainId={56}\n        connectors={{ bsc }}\n      >\n        <App />\n      </UseWalletProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}